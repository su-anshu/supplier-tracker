# Generated by Django 5.0.1 on 2025-07-26 11:27

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_id', models.CharField(editable=False, help_text='Auto-generated unique supplier ID', max_length=20, unique=True)),
                ('supplier_name', models.CharField(help_text='Official supplier/company name', max_length=200, unique=True)),
                ('contact_person', models.CharField(help_text='Primary contact person name', max_length=100)),
                ('category', models.CharField(choices=[('manufacturer', 'Manufacturer'), ('distributor', 'Distributor'), ('wholesaler', 'Wholesaler'), ('retailer', 'Retailer'), ('service_provider', 'Service Provider'), ('raw_material', 'Raw Material Supplier'), ('packaging', 'Packaging Supplier'), ('others', 'Others')], default='manufacturer', help_text='Supplier business category', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blacklisted', 'Blacklisted'), ('pending_approval', 'Pending Approval'), ('suspended', 'Suspended')], default='pending_approval', help_text='Current supplier status', max_length=20)),
                ('phone_number', models.CharField(help_text='Primary phone number', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('alternate_phone', models.CharField(blank=True, help_text='Alternative phone number', max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, help_text='Primary email address (OPTIONAL)', max_length=254, null=True, validators=[django.core.validators.EmailValidator()])),
                ('alternate_email', models.EmailField(blank=True, help_text='Alternative email address', max_length=254, null=True, validators=[django.core.validators.EmailValidator()])),
                ('website', models.URLField(blank=True, help_text='Company website URL', null=True)),
                ('address_line_1', models.CharField(help_text='Street address line 1', max_length=200)),
                ('address_line_2', models.CharField(blank=True, help_text='Street address line 2 (optional)', max_length=200, null=True)),
                ('city', models.CharField(help_text='City', max_length=100)),
                ('state', models.CharField(help_text='State/Province', max_length=100)),
                ('postal_code', models.CharField(help_text='Postal/ZIP code', max_length=20)),
                ('country', models.CharField(default='India', help_text='Country', max_length=100)),
                ('gstin', models.CharField(blank=True, help_text='GST Identification Number (15 digits)', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid GSTIN (15 characters)', regex='^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$')])),
                ('pan_number', models.CharField(blank=True, help_text='PAN Card Number', max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid PAN number (e.g., ABCDE1234F)', regex='^[A-Z]{5}[0-9]{4}[A-Z]{1}$')])),
                ('payment_terms', models.CharField(choices=[('immediate', 'Immediate'), ('net_7', 'Net 7 Days'), ('net_15', 'Net 15 Days'), ('net_30', 'Net 30 Days'), ('net_45', 'Net 45 Days'), ('net_60', 'Net 60 Days'), ('advance', 'Advance Payment'), ('cod', 'Cash on Delivery')], default='net_30', help_text='Default payment terms', max_length=20)),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Credit limit amount (OPTIONAL)', max_digits=15, null=True)),
                ('rating', models.CharField(choices=[('excellent', 'Excellent (A+)'), ('good', 'Good (A)'), ('average', 'Average (B)'), ('below_average', 'Below Average (C)'), ('poor', 'Poor (D)'), ('not_rated', 'Not Rated')], default='not_rated', help_text='Supplier performance rating', max_length=20)),
                ('bank_name', models.CharField(blank=True, help_text='Bank name (OPTIONAL)', max_length=200, null=True)),
                ('account_number', models.CharField(blank=True, help_text='Bank account number (OPTIONAL)', max_length=50, null=True)),
                ('ifsc_code', models.CharField(blank=True, help_text='IFSC code (OPTIONAL)', max_length=11, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid IFSC code (e.g., SBIN0001234)', regex='^[A-Z]{4}0[A-Z0-9]{6}$')])),
                ('upi_scanner_image', models.ImageField(blank=True, help_text='UPI QR code scanner image (OPTIONAL)', null=True, upload_to='upi_scanners/')),
                ('products_services', models.TextField(blank=True, help_text='Products/services offered by supplier', null=True)),
                ('remarks', models.TextField(blank=True, help_text='Additional notes or comments', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(default='System', help_text='User who created this supplier', max_length=100)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'db_table': 'supplier_master',
                'ordering': ['supplier_name'],
                'indexes': [models.Index(fields=['category'], name='supplier_ma_categor_75a0a7_idx'), models.Index(fields=['status'], name='supplier_ma_status_6304e8_idx'), models.Index(fields=['supplier_name'], name='supplier_ma_supplie_5d15ba_idx'), models.Index(fields=['gstin'], name='supplier_ma_gstin_84afb6_idx'), models.Index(fields=['created_at'], name='supplier_ma_created_218798_idx')],
            },
        ),
    ]
