# Generated by Django 5.0.1 on 2025-07-29 11:58

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('items', '0002_remove_classification_fields'),
        ('suppliers', '0001_initial'),
        ('transporters', '0003_alter_transporter_fleet_size_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_number', models.CharField(editable=False, help_text='Auto-generated PO number', max_length=20, unique=True)),
                ('po_date', models.DateField(default=django.utils.timezone.now, help_text='Purchase order date')),
                ('expected_delivery_date', models.DateField(help_text='Expected delivery date')),
                ('actual_delivery_date', models.DateField(blank=True, help_text='Actual delivery date', null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('sent_to_supplier', 'Sent to Supplier'), ('confirmed', 'Confirmed by Supplier'), ('in_transit', 'In Transit'), ('partially_delivered', 'Partially Delivered'), ('delivered', 'Delivered'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='draft', help_text='Current status of the purchase order', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', help_text='Priority level', max_length=10)),
                ('payment_terms', models.CharField(choices=[('immediate', 'Immediate Payment'), ('net_7', 'Net 7 Days'), ('net_15', 'Net 15 Days'), ('net_30', 'Net 30 Days'), ('net_45', 'Net 45 Days'), ('net_60', 'Net 60 Days'), ('advance_50', '50% Advance'), ('advance_100', '100% Advance'), ('cod', 'Cash on Delivery')], default='net_30', help_text='Payment terms', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Subtotal before tax', max_digits=15)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total tax amount', max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount including tax', max_digits=15)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Discount percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Discount amount', max_digits=15)),
                ('delivery_address', models.TextField(help_text='Delivery address')),
                ('delivery_contact_person', models.CharField(help_text='Contact person for delivery', max_length=100)),
                ('delivery_phone', models.CharField(help_text='Delivery contact phone', max_length=17)),
                ('reference_number', models.CharField(blank=True, help_text='External reference number', max_length=50, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes or instructions', null=True)),
                ('terms_and_conditions', models.TextField(blank=True, help_text='Terms and conditions', null=True)),
                ('approved_by', models.CharField(blank=True, help_text='Approved by user', max_length=100, null=True)),
                ('approved_at', models.DateTimeField(blank=True, help_text='Approval timestamp', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(default='System', help_text='User who created this PO', max_length=100)),
                ('updated_by', models.CharField(blank=True, help_text='User who last updated this PO', max_length=100, null=True)),
                ('supplier', models.ForeignKey(help_text='Supplier for this purchase order', on_delete=django.db.models.deletion.PROTECT, related_name='purchase_orders', to='suppliers.supplier')),
                ('transporter', models.ForeignKey(blank=True, help_text='Assigned transporter (optional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_orders', to='transporters.transporter')),
            ],
            options={
                'verbose_name': 'Purchase Order',
                'verbose_name_plural': 'Purchase Orders',
                'db_table': 'purchase_order',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('po_pdf', 'Purchase Order PDF'), ('supplier_quote', 'Supplier Quote'), ('invoice', 'Invoice'), ('delivery_note', 'Delivery Note'), ('payment_receipt', 'Payment Receipt'), ('other', 'Other Document')], help_text='Type of document', max_length=50)),
                ('document_file', models.FileField(help_text='Document file', upload_to='purchase_orders/documents/%Y/%m/')),
                ('description', models.CharField(blank=True, help_text='Document description', max_length=200, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.CharField(default='System', help_text='User who uploaded the document', max_length=100)),
                ('purchase_order', models.ForeignKey(help_text='Related purchase order', on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='purchase_orders.purchaseorder')),
            ],
            options={
                'verbose_name': 'PO Document',
                'verbose_name_plural': 'PO Documents',
                'db_table': 'purchase_order_document',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantity to order', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('unit_rate', models.DecimalField(decimal_places=2, help_text='Rate per unit', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('line_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Line total before tax', max_digits=15)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax rate percentage', max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax amount for this line', max_digits=15)),
                ('line_total_with_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Line total including tax', max_digits=15)),
                ('received_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Quantity received', max_digits=10)),
                ('pending_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Quantity pending delivery', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Item-specific notes', null=True)),
                ('expected_delivery_date', models.DateField(blank=True, help_text='Expected delivery date for this item', null=True)),
                ('actual_delivery_date', models.DateField(blank=True, help_text='Actual delivery date', null=True)),
                ('item', models.ForeignKey(help_text='Item being ordered', on_delete=django.db.models.deletion.PROTECT, related_name='purchase_order_items', to='items.item')),
                ('purchase_order', models.ForeignKey(help_text='Related purchase order', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='purchase_orders.purchaseorder')),
            ],
            options={
                'verbose_name': 'Purchase Order Item',
                'verbose_name_plural': 'Purchase Order Items',
                'db_table': 'purchase_order_item',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('sent_to_supplier', 'Sent to Supplier'), ('confirmed', 'Confirmed by Supplier'), ('in_transit', 'In Transit'), ('partially_delivered', 'Partially Delivered'), ('delivered', 'Delivered'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], help_text='Status at this point', max_length=20)),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When status was changed')),
                ('changed_by', models.CharField(help_text='User who changed the status', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Notes about the status change', null=True)),
                ('purchase_order', models.ForeignKey(help_text='Related purchase order', on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='purchase_orders.purchaseorder')),
            ],
            options={
                'verbose_name': 'PO Status History',
                'verbose_name_plural': 'PO Status History',
                'db_table': 'purchase_order_status_history',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['status'], name='purchase_or_status_86ae3f_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['po_date'], name='purchase_or_po_date_92f404_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['supplier'], name='purchase_or_supplie_6b4199_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['priority'], name='purchase_or_priorit_8ebfa6_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['created_at'], name='purchase_or_created_a0c5eb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='purchaseorderitem',
            unique_together={('purchase_order', 'item')},
        ),
    ]
